name: Build secOS

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TERM: xterm-256color
      DEBIAN_FRONTEND: noninteractive
      # Build information
      BUILD_DATE: "2024-12-19 18:36:32"
      BUILD_USER: "Sechorda"
      # Force verbose output
      VERBOSE: true
      DEBUG: true

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup build environment
      run: |
        # Enable verbose output for apt
        echo 'Debug::pkgProblemResolver "true";' | sudo tee /etc/apt/apt.conf.d/debug
        echo 'Debug::pkgDepCache::AutoInstall "true";' | sudo tee -a /etc/apt/apt.conf.d/debug
        
        # Update with verbose output
        sudo apt-get update -o Debug::pkgProblemResolver=true
        
        # Install required packages with verbose output
        sudo apt-get install -y -V \
          apt-utils \
          debootstrap \
          squashfs-tools \
          xorriso \
          isolinux \
          syslinux-efi \
          grub-pc-bin \
          grub-efi-amd64-bin \
          grub-efi-ia32-bin \
          mtools \
          dosfstools \
          wget \
          unzip \
          virtualbox

    - name: Modify build script
      run: |
        # Create sed script for modifications
        cat << 'EOL' > modify_script.sed
        # Remove spinner function and related variables
        /^spinner=/d
        /^build_steps=/d
        /^update_step/d
        /^display_spinner/d
        /^print_centered_ascii_art/,/^}/d
        
        # Remove the initialization block
        /if \[ -d "\${LIVE_BOOT_DIR}" \]; then/,/done/d
        
        # Remove display_spinner calls and background processes
        s/ *&\s*$//
        s/display_spinner \$! [0-9]//
        
        # Remove clear command and output suppression
        /^[[:space:]]*clear/d
        s/ *>[^ ]* 2>&1//g
        s/ *&>[^ ]*//g
        s/ *>[^ ]*//g
        
        # Add verbose flags to key commands
        s/apt-get install/apt-get install -V/g
        s/debootstrap /debootstrap --verbose /g
        s/mksquashfs /mksquashfs -info /g
        s/xorriso /xorriso -report_about WARNING /g
        
        # Add debug output at the start of each function
        /^[a-zA-Z_][a-zA-Z0-9_]*().*{/a\
            echo "[DEBUG] Starting function: $FUNCNAME at $(date "+%Y-%m-%d %H:%M:%S")"
        EOL
        
        # Create backup of original script
        cp buildeb/buildeb.sh buildeb/buildeb.sh.backup
        
        # Apply modifications
        sed -i.bak -f modify_script.sed buildeb/buildeb.sh
        
        # Add debug options at the start of the script
        sed -i '2i set -x' buildeb/buildeb.sh
        sed -i '3i export PS4='"'"'+(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'"'" buildeb/buildeb.sh
        
        # Add build information
        sed -i "4i echo 'Build started by: ${BUILD_USER} at ${BUILD_DATE}'" buildeb/buildeb.sh
        
        # Make script executable
        chmod +x buildeb/buildeb.sh

    - name: Run build script
      run: |
        # Set maximum verbosity for bash
        set -x
        export PS4='+(${BASH_SOURCE}:${LINENO}): ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
        
        # Run the build script with verbose output
        sudo -E bash -x ./buildeb/buildeb.sh
