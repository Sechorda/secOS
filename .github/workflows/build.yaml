name: Build and Upload secOS
on:
  workflow_dispatch:

env:
  DEBIAN_FRONTEND: noninteractive

jobs:
  build-and-upload:
    runs-on: ubuntu-latest
    container:
      image: debian:bookworm
      options: --privileged

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install initial requirements
        run: |
          apt-get update
          apt-get install -y ca-certificates curl gpg wget apt-utils

      - name: Install build dependencies
        run: |
          apt-get update
          apt-get install -y \
            debootstrap \
            squashfs-tools \
            xorriso \
            isolinux \
            syslinux-efi \
            grub-pc-bin \
            grub-efi-amd64-bin \
            grub-efi-ia32-bin \
            mtools \
            dosfstools \
            wget \
            unzip \
            curl \
            gpg \
            linux-headers-amd64

      - name: Install rclone
        run: |
          curl https://rclone.org/install.sh | bash
          mkdir -p ~/.config/rclone

      - name: Configure rclone
        env:
          R2_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          R2_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          R2_ACCOUNT_ID: ${{ secrets.R2_ACCOUNT_ID }}
          R2_BUCKET_NAME: ${{ secrets.R2_BUCKET_NAME }}
        run: |
          cat > ~/.config/rclone/rclone.conf << EOF
          [r2]
          type = s3
          provider = Cloudflare
          access_key_id = ${R2_ACCESS_KEY_ID}
          secret_access_key = ${R2_SECRET_ACCESS_KEY}
          endpoint = https://${R2_ACCOUNT_ID}.r2.cloudflarestorage.com
          acl = private
          bucket_name = ${R2_BUCKET_NAME}
          EOF

      - name: Prepare build script
        run: |
          cd buildeb
          # Make backup
          cp buildeb.sh buildeb.sh.bak
          
          # Process script to remove sudo and adjust paths
          cat buildeb.sh.bak | sed \
            -e 's/sudo //g' \
            -e 's/sudo -E //g' \
            -e 's/sudo -H //g' \
            -e 's/sudo -u //g' \
            -e 's/sudo chroot/chroot/g' \
            -e 's/clear/printf "\\033[2J\\033[H"/' > buildeb.sh
            
          # Set permissions
          chmod +x buildeb.sh
          
          # Print modifications for verification
          echo "=== Checking for any remaining sudo commands ==="
          grep -n "sudo" buildeb.sh || echo "No sudo commands found"
          echo "==========================================="

      - name: Run build script
        env:
          TERM: xterm-256color
        run: |
          cd buildeb
          ./buildeb.sh

      - name: Upload files to R2
        run: |
          cd buildeb
          rclone copy secOS.iso r2:${R2_BUCKET_NAME}
          rclone copy secOS.ova r2:${R2_BUCKET_NAME}

      - name: Cleanup
        if: always()
        run: |
          cd buildeb
          rm -f secOS.iso secOS.ova
