name: Build SecOS

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths:
      - 'buildeb/**'
      - 'config/**'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'buildeb/**'
      - 'config/**'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TERM: xterm-256color
      DEBIAN_FRONTEND: noninteractive

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup sudo
      run: |
        sudo apt-get update
        sudo apt-get install -y sudo

    - name: Create minimal build script
      run: |
        cd buildeb
        # Extract core functions and arrays
        grep -A1000 "CUSTOM_PROGRAMS=" buildeb.sh | grep -B1000 "^main()" > core.sh
        # Add shebang and essential setup
        echo '#!/usr/bin/env bash' > build_minimal.sh
        echo 'set -e' >> build_minimal.sh
        echo 'LIVE_BOOT_DIR="/tmp/LIVE_BOOT"' >> build_minimal.sh
        echo 'trap "rm -rf \${LIVE_BOOT_DIR}" EXIT' >> build_minimal.sh
        # Add core functions
        cat core.sh >> build_minimal.sh
        # Add simplified main function
        cat << 'EOF' >> build_minimal.sh
        main() {
            if [ -d "${LIVE_BOOT_DIR}" ]; then
                sudo rm -rf "${LIVE_BOOT_DIR}"
            fi
            setup_build_env
            bootstrap_debian
            install_kernel_and_packages
            install_github_packages    
            configure_system
            create_filesystem
            configure_boot_loaders
            create_efi_images
            create_uefi_boot_image
            create_iso_and_ova
        }
        main
        EOF
        chmod +x build_minimal.sh

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y apt-utils debootstrap squashfs-tools xorriso \
        isolinux syslinux-efi grub-pc-bin grub-efi-amd64-bin grub-efi-ia32-bin \
        mtools dosfstools wget unzip virtualbox

    - name: Build OS
      run: cd buildeb && sudo ./build_minimal.sh
